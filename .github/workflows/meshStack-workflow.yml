on:
  workflow_call:
    inputs:
      foundation:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.foundation }}
    permissions:
      id-token: write
      contents: read
    env:
      TG_TF_PATH: tofu
      TG_PROVIDER_CACHE: 1 # enable provider caching for a speeding up tf inits
      TG_NON_INTERACTIVE: true

      TF_IN_AUTOMATION: true
      MESHSTACK_API_KEY_STATIC_WEBSITE_ASSETS: ${{ secrets.MESHSTACK_API_KEY_STATIC_WEBSITE_ASSETS }}
      MESHSTACK_API_KEY_CLOUDFOUNDATION: ${{ secrets.MESHSTACK_API_KEY_CLOUDFOUNDATION }}
      MESHSTACK_API_PASSWORD: ${{ secrets.MESHSTACK_API_PASSWORD }}
      GITHUB_APP_PEM_FILE: ${{ secrets.ACTIONS_GITHUB_APP_PEM_FILE }} # required for the github terraform provider

      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ vars.azure_client_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-nix-shell
        with:
          prepare_terraform: true

      - name: Setup az auth
        uses: azure/login@v2
        with:
          client-id: ${{ vars.azure_client_id }}
          tenant-id: ${{ vars.azure_tenant_id }}
          subscription-id: ${{ vars.azure_subscription_id }}

      - name: Setup aws auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          role-to-assume: ${{ vars.aws_iam_role }}
          role-session-name: github-actions-${{ github.run_id }}

      - name: terragrunt meshstack apply docs
        if: github.ref == 'refs/heads/main'
        run: |
          terragrunt apply \
            --working-dir="./foundations/${{ inputs.foundation }}/meshstack" \
            -- -target=output.documentation_guides_md -lock=false -auto-approve

      - name: terragrunt meshstack plan
        run: |
          terragrunt plan \
            --all \
            --working-dir="./foundations/${{ inputs.foundation }}/meshstack" \
            -- -lock=false -concise
