on:
  workflow_call:
    inputs:
      foundation:
        required: true
        type: string

jobs:
  docs:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.foundation }}
    permissions:
      id-token: write
      contents: read
    env:
      TERRAGRUNT_TFPATH: tofu
      TF_IN_AUTOMATION: true

      # required for azurerm state backend
      ARM_CLIENT_ID: ${{ vars.azure_client_id }}
      ARM_USE_OIDC: true
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-nix-shell
        with:
          prepare_terraform: true

      # we use the convenience of GHA to cache node_modules etc.
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x # matches nix shell
          cache: npm
          cache-dependency-path: foundations/${{ inputs.foundation }}/docs/vuepress/package-lock.json

      - uses: meshcloud/setup-collie@main

      # authenticate with azure using Workflow Identity Federation, this enables us to access the tfstate for platforms/azure
      # and perform terraform plan against platform/azure
      - name: Setup az login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.azure_client_id }}
          tenant-id: ${{ vars.azure_tenant_id }}
          subscription-id: ${{ vars.azure_subscription_id }}

      - name: Setup aws auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          role-to-assume: ${{ vars.aws_iam_role }}
          role-session-name: github-actions-${{ github.run_id }}

      - name: Setup gcloud auth
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ vars.gcp_service_account }}' # sourced from gh environment variable
          workload_identity_provider: '${{ vars.gcp_workload_identity_provider }}'

      - name: update docs v2
        working-directory: foundations/${{ inputs.foundation }}/docs
        run: |
          collie foundation docs ${{ inputs.foundation }} --build
        env:
          MESHSTACK_API_KEY_STATIC_WEBSITE_ASSETS: ${{ secrets.MESHSTACK_API_KEY_STATIC_WEBSITE_ASSETS }}
          MESHSTACK_API_KEY_ONLINE_BANKING_APP: ${{ secrets.MESHSTACK_API_KEY_ONLINE_BANKING_APP }}
          MESHSTACK_API_PASSWORD: ${{ secrets.MESHSTACK_API_PASSWORD }}
          MESHSTACK_API_KEY_SAP_CORE_PLATFORM: ${{ secrets.MESHSTACK_API_KEY_SAP_CORE_PLATFORM }}
          MESHSTACK_API_KEY_LIKVID_GOV_GUARD: ${{ secrets.MESHSTACK_API_KEY_LIKVID_GOV_GUARD }}
          MESHSTACK_API_KEY_QUICKSTART_PROD: ${{ secrets.MESHSTACK_API_KEY_QUICKSTART_PROD }}

      - name: upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ inputs.foundation }}
          path: foundations/${{ inputs.foundation }}/.docs-v2/docs/.vuepress/dist
