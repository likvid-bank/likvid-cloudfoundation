### 1. **Title**

**Automating GCP Deny Policy Communication via meshStack API**

---

### 2. **Motivation / Business Context**

Phil is a GCP architect at **Likvid Bank**, a large bank that operates heavily in Google Cloud (GCP). His team is responsible for **ensuring that all GCP services used across the company meet strict internal security standards**.

When a GCP service fails to meet these standards, the team creates a **Deny Policy** in GCP to prevent its use. However, **informing all relevant application teams about these new restrictions is currently manual and inefficient**, involving direct messages and updates in various tools.

---

### 3. **Challenges**

- **Manual process**: Currently, reaching out to affected teams requires a manual process of identifying the user of the service via GCP and sending an email to those teams responsible for the GCP project.
- **Ownership visibility**: It is difficult to identify **who owns the GCP projects** using the restricted services and retrieve their **contact information** (e.g., email addresses) for communication.
- **Verification gap**: There is **no structured or automated way** to ensure that teams actually **deprecate the usage** of the denied service after being notified. This creates follow-up overhead and potential compliance gaps.

---

### 4. **Implementation Steps**

#### a. Service Usage Assessment

Phil’s team collects service usage data from GCP via a script, **identifying which GCP projects** are consuming the now-restricted services. They identify the platform tenant ID.

#### b. Identify Tenant UUID in meshStack

With GCP project info in hand, the team uses the **meshStack API** to retrieve the associated tenant UUID.

#### c. Automated Communication

The team uses the meshStack communications definitions and communications API to send the “Action Required” communication to all affected workspaces, including a due date for confirming the deprecation.

#### d. Create Communication Definition

> **📦 JSON Example: Communication Definition**
>
> {
>   "apiVersion": "v1-preview",
>   "kind": "meshCommunicationDefinition",
>   "spec": {
>     "displayName": "Deprecation of GCP Service",
>     "communication": {
>       "title": "### 🚨 Action Required: Deprecation of Cloud Vision API",
>       "message": "Hi Team,\n\nYour GCP project is currently using Cloud Vision API service, which does **not meet Likvid Bank’s security requirements**.\n\nA **Deny Policy** will be applied to restrict its use.\n\n#### ✅ What you need to do:\n1. Stop using Cloud Vision API in your project by 31st July 2025.\n2. Confirm deprecation by confirming via meshPanel.\n3. Reach out via security@likvidbank.io if you need support.  \n\nThanks for helping keep our cloud environment secure.\n\n– **Phil**, GCP Architect",
>       "type": "ACTION_REQUIRED",
>       "dueDate": "2025-08-30"
>     }
>   }
> }

#### e. Create Communications Referencing the Communication Definition UUID

> **📦 JSON Example: Create Communication**
>
> {
>   "kind": "meshCommunication",
>   "apiVersion": "v1-preview",
>   "spec": {
>     "targetMeshObjectRef": {
>       "kind": "meshTenant",
>       "name": "89fef88e-8be0-11ef-ab38-0a83cf995803"
>     },
>     "communicationDefinitionRef": {
>       "uuid": "b0eff69a-87ca-4a96-ab4b-81441bd46821"
>     }
>   }
> }

#### f. Workspaces Respond

Workspaces with affected GCP projects respond, and Phil and his team can track the progress.

---

### 5. **Conclusion**

By integrating external GCP usage data with meshStack using the **Tenant Platform ID** and **meshStack API**, Likvid Bank’s cloud security team has:

- **Automated communications** with impacted workspaces  
- **Eliminated manual overhead**, saving hours of repetitive effort  
- Ensured **fast, consistent, and traceable notifications** across teams  

This demo story highlights how meshStack can be extended to support security-driven governance workflows at scale, enabling better compliance, team coordination, and operational efficiency.
